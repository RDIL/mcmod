buildscript {
    repositories {
        if (project.getProperty("useProxies") == true) {
            maven {
                url "https://hyperiumjailbreak.mycloudrepo.io/public/repositories/forge-proxy"
                name "Forge Proxy"
            }
            maven {
                url "https://rdil.mycloudrepo.io/public/repositories/maven-central-proxy"
                name "Maven Central Proxy"
            }
            maven {
                url "https://hyperiumjailbreak.mycloudrepo.io/public/repositories/sponge-proxy"
                name "SpongePowered Proxy"
            }
        } else {
            maven {
                url "https://files.minecraftforge.net/maven/"
                name "Forge"
            }
            maven {
                url "https://repo.maven.apache.org/maven2/"
                name "Maven Central"
            }
            maven {
                url "https://repo.spongepowered.org/maven/"
                name "SpongePowered"
            }
        }
    }

    dependencies {
        classpath "net.minecraftforge.gradle:ForgeGradle:2.1-SNAPSHOT"
        classpath "org.spongepowered:mixingradle:0.6-SNAPSHOT"
    }
}

apply plugin: "java"
apply plugin: "net.minecraftforge.gradle.forge"
apply plugin: "org.spongepowered.mixin"

configurations {
    embed
    compile.extendsFrom(embed)
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

compileJava.options.encoding = "UTF-8"

final def tweaker = "${project.group}.${rootProject.name}.tweaker.ModPartialMixinTweaker"

minecraft {
    version "1.8.9-11.15.1.2318-1.8.9"
    runDir "run"
    mappings "stable_22"
    makeObfSourceJar false
}

repositories {
    if (project.getProperty("useProxies") == true) {
        maven {
            url "https://hyperiumjailbreak.mycloudrepo.io/public/repositories/sponge-proxy"
            name "SpongePowered Proxy"
        }
    } else {
        maven {
            url "https://repo.spongepowered.org/maven/"
            name "SpongePowered"
        }
    }
}

dependencies {
    embed("org.spongepowered:mixin:0.7.11-SNAPSHOT") {
        exclude module: "launchwrapper"
        exclude module: "guava"
        exclude module: "gson"
        exclude module: "commons-io"
        exclude module: "log4j-core"
    }
}

mixin {
    defaultObfuscationEnv searge
    add sourceSets.main, "mixin.${rootProject.name}.refmap.json"
    disableRefMapWarning true
}

processResources {
    inputs.property "version", project.version
    inputs.property "modid", rootProject.name
    inputs.property "description", project.description
    inputs.property "group", project.group

    from(sourceSets.main.resources.srcDirs) {
        include "mcmod.info"
        include "mixins." + rootProject.name + ".json"
        expand "version": project.version,
               "modid": rootProject.name,
               "description": project.description,
               "group": project.group
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude "mcmod.info"
        exclude "mixins." + rootProject.name + ".json"
    }
}

jar {
    manifest.attributes(
        'FMLCorePlugin': tweaker,
        'ForceLoadAsMod': true,
        'FMLCorePluginContainsFMLMod': true,
        'ModSide': 'CLIENT'
    )

    from configurations.embed.collect {
        it.isDirectory() ? it : zipTree(it)
    }
}
